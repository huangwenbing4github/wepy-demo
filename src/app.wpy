<style lang="less">
page {
  font-family: -apple-system-font, "Helvetica Neue",Helvetica,sans-serif;
  line-height: 150%;
  min-height: 100%;
  display: flex;
  flex-direction: column;
  align-items: stretch;
  color: #666;
  position: relative;
}
.container{
  position: relative;
  flex: 1;
  display: flex;
  flex-direction: column;
  min-height: 100%;
  padding-bottom: 100rpx;
  box-sizing: border-box;
}
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

import { setStore } from 'wepy-redux'
import configStore from './store'

const store = configStore()
setStore(store)

export default class extends wepy.app {
  config = {
    pages: [
      'pages/en',
      'pages/index',
      'pages/student/cet',
      'pages/student/ykt',
      'pages/student/score'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'JUST',
      navigationBarTextStyle: 'black'
    },
    tabBar: {
      color: '#7f848a',
      selectedColor: '#7acfa6',
      backgroundColor: '#f7f6fb',
      list: [
        {
          pagePath: 'pages/index',
          text: '首页',
          iconPath: 'images/index/index.png',
          selectedIconPath: 'images/index/index@active.png'
        },
        {
          pagePath: 'pages/en',
          text: 'HOME',
          iconPath: 'images/index/news.png',
          selectedIconPath: 'images/index/news@active.png'
        }
      ]
    }
  }

  globalData = {
    userInfo: null
  }

  constructor () {
    super()
    this.use('requestfix')
  }

  onLaunch() {
    this.testAsync()
  }

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync () {
    const data = await this.sleep(3)
    console.log(data + 'test await sleep')
  }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success (res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      },
      fail (res) {
        console.log(res)
        console.log('获取用户失败')
      }
    })
  }
}
</script>
